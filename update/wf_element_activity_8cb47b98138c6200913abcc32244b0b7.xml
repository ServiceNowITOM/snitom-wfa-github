<?xml version="1.0" encoding="UTF-8"?>
<record_update table="wf_element_activity">
    <wf_element_activity action="INSERT_OR_UPDATE">
        <access>public</access>
        <attributes/>
        <base_provider display_value="Run Script">d0c7fe11eb013100fc5e8a7af106fee0</base_provider>
        <category/>
        <checked_out_by/>
        <default_height/>
        <default_width/>
        <description>Returns JSON</description>
        <image>images/heisenberg_icons/workflow_ie8/provider_runscript.png</image>
        <input_meta>{"name":"Input","type":"DATA_OBJECT","properties":[{"name":"Repository_Full_Name","type":"STRING","mandatory":false},{"name":"pullnumber","type":"STRING","mandatory":false},{"name":"Username","type":"STRING","mandatory":false},{"name":"Password","type":"STRING","mandatory":false}]}</input_meta>
        <input_process_script/>
        <input_transform/>
        <local_variables/>
        <name>Get Commits From a Pull</name>
        <output_meta>{"name":"Output","type":"DATA_OBJECT","properties":[{"name":"commits","type":"STRING"}]}</output_meta>
        <output_process_script/>
        <output_transform/>
        <processing_script><![CDATA[/*
In
activityInput.Repository_Full_Name
activityInput.pullnumber
activityInput.Username
activityInput.Password

Out
activityOutput.commits
*/

var juser;
var jpass;
//See if Username has been set
if (activityInput.Username){
	juser = activityInput.Username;
	jpass = activityInput.Password;

}

//If Username has not been set lok it up from table.
else {
	var GL = new GlideRecord('x_snc_itom_github_github_repositories');
	GL.addQuery('full_name' ,activityInput.Repository_Full_Name);
	GL.query();
	while (GL.next()) {
		juser = GL.credentials.user;
		var pass = GL.credentials.password;
		jpass = GL.credentials.password.getDecryptedValue();
	}
}

//Build WebCall
var restMessage = new sn_ws.RESTMessageV2();
var mysplit = activityInput.Repository_Full_Name.split('/');
var repo = mysplit[1];
var owner = mysplit[0];
restMessage.setBasicAuth(juser, jpass);
restMessage.setHttpMethod("get");
var myurl = 'https://api.github.com/repos/' + owner + '/' + repo + '/pulls/'+ activityInput.pullnumber + '/commits';
restMessage.setEndpoint(myurl);
var httpExecute = restMessage.execute();
if (httpExecute.getStatusCode() != 200){
	throw httpExecute.getErrorMessage();
}
var messageBody = httpExecute.getBody();
//Set Output
activityOutput.commits = messageBody;]]></processing_script>
        <sample_payloads>{}</sample_payloads>
        <short_description>Get Commits From a Pull</short_description>
        <style/>
        <sys_class_name>wf_element_activity</sys_class_name>
        <sys_created_by>shaun.millin</sys_created_by>
        <sys_created_on>2016-06-12 22:19:57</sys_created_on>
        <sys_customer_update>true</sys_customer_update>
        <sys_id>8cb47b98138c6200913abcc32244b0b7</sys_id>
        <sys_mod_count>2</sys_mod_count>
        <sys_name>Get Commits From a Pull</sys_name>
        <sys_package display_value="Github Management" source="x_snc_itom_github">1b332a2613efd200913abcc32244b00d</sys_package>
        <sys_policy/>
        <sys_replace_on_upgrade>false</sys_replace_on_upgrade>
        <sys_scope display_value="Github Management">1b332a2613efd200913abcc32244b00d</sys_scope>
        <sys_update_name>wf_element_activity_8cb47b98138c6200913abcc32244b0b7</sys_update_name>
        <sys_updated_by>shaun.millin</sys_updated_by>
        <sys_updated_on>2016-06-12 22:23:08</sys_updated_on>
        <version_container_id>78e43b98138c6200913abcc32244b0c1</version_container_id>
    </wf_element_activity>
    <sys_translated_text action="delete_multiple" query="documentkey=8cb47b98138c6200913abcc32244b0b7"/>
    <wf_versionable action="INSERT_OR_UPDATE">
        <checked_out/>
        <checked_out_by/>
        <published>true</published>
        <sys_created_by>shaun.millin</sys_created_by>
        <sys_created_on>2016-06-12 22:19:57</sys_created_on>
        <sys_id>30e43b98138c6200913abcc32244b0c2</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_updated_by>shaun.millin</sys_updated_by>
        <sys_updated_on>2016-06-12 22:23:07</sys_updated_on>
        <valid_from>2016-06-12 22:23:07</valid_from>
        <valid_to/>
        <version>1</version>
        <version_container_id>78e43b98138c6200913abcc32244b0c1</version_container_id>
        <wf_element_definition display_value="Get Commits From a Pull">8cb47b98138c6200913abcc32244b0b7</wf_element_definition>
    </wf_versionable>
    <wf_versionable action="update_multiple" query="version_container_id=78e43b98138c6200913abcc32244b0c1^sys_id!=30e43b98138c6200913abcc32244b0c2">
        <published>false</published>
    </wf_versionable>
    <wf_activity action="update_multiple" is_dot_walk_query="true" query="workflow_version.published=true^activity_definition.version_container_id=78e43b98138c6200913abcc32244b0c1^pinned=true">
        <new_activity_definition>8cb47b98138c6200913abcc32244b0b7</new_activity_definition>
        <out_of_date>true</out_of_date>
        <notes>There is a newer version of this activity. To update the activity, check out the workflow, select the activity, right click and select update activity to use the latest version.</notes>
    </wf_activity>
    <wf_activity action="update_multiple" is_dot_walk_query="true" query="workflow_version.published=true^activity_definition.version_container_id=78e43b98138c6200913abcc32244b0c1^pinned=false">
        <activity_definition>8cb47b98138c6200913abcc32244b0b7</activity_definition>
        <activity_definition_updated>true</activity_definition_updated>
        <notes>This activity was updated to a newer version since the workflow was published.</notes>
    </wf_activity>
</record_update>
